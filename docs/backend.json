{
  "entities": {
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a task in the TaskMaster Pro application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Task entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who owns the task. (Relationship: User 1:N Task)"
        },
        "title": {
          "type": "string",
          "description": "The title of the task."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the task."
        },
        "status": {
          "type": "string",
          "description": "The current status of the task.",
          "format": "string",
          "items": {
            "type": "string"
          }
        },
        "dueDate": {
          "type": "string",
          "description": "The date and time when the task is due.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "status",
        "dueDate"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the TaskMaster Pro application, authenticated via Firebase.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity. This corresponds to the Firebase user ID."
        },
        "username": {
          "type": "string",
          "description": "The username of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Access is restricted to the user identified by {userId}.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase user ID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores tasks associated with a specific user. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase user ID of the task owner."
            },
            {
              "name": "taskId",
              "description": "The unique identifier for the task."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to securely manage users and their tasks for the TaskMaster Pro application. It emphasizes authorization independence and simplifies security rules by denormalizing user ownership directly within the task documents. This eliminates the need for complex `get()` calls in security rules, ensuring atomic operations and easier debugging.\n\nSpecifically:\n\n*   **Users Collection (`/users/{userId}`):** Stores user profiles. Access is limited to the user themselves.\n*   **Tasks Collection (`/users/{userId}/tasks/{taskId}`):** Stores tasks associated with a specific user. Each task includes the `userId` as a field, enabling direct validation of ownership within security rules.\n\nThis structure supports the required QAPs (Queries are not Filters) by ensuring that list operations can be securely performed based on the `userId` embedded within the task documents, preventing unauthorized access to tasks. Path-based ownership (`/users/{userId}/tasks/{taskId}`) ensures that a user can only access tasks under their own user ID."
  }
}
